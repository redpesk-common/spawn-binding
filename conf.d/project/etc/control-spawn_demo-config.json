{
  "metadata": {
    "uid": "spawn-svc",
    "version": "1.0",
    "api": "shell",
    "info": "Generic shell binding API demo default Test Config"
  },
  "plugins": [
    {
      "uid": "encoder-sample",
      "info": "Plugin to handle user custom output formatting",
      "spath": "package/lib/:./lib/plugins:./var",
      "libs": "encoder-sample.ctlso"
    }
  ],
  "sandboxes": [
    {
      "uid": "sandbox-demo",
      "info": "Shell admin commands",
      "prefix": "admin",
      "privilege": "global privilege",
      "verbose":9,
      "envs" : [
          {"key": "HOME", "value": "/home"},
          {"key": "HOSTNAME", "value":"sandbox"},
          {"key": "SESSION_MANAGER", "mode":"unset"},
          {"key": "PATH", "value":"/bin"},
          {"key": "LD_LIBRAY_PATH", "value":"/usr/lib64"}
        ],

      "acls": {
          "umask": "027",
          "user": "daemon",
          "group":"dialout",
          "chdir": "/var/tmp"
        },

      "caps": [
          {"cap": "NET_BROADCAST", "mode": "unset"},
          {"cap": "KILL", "mode":"set"}
        ],

      "cgroups": {
        "cset": "1-4",
        "mem": {"max": "512M", "hight": "256M", "min": "128K"},
        "cpu": {"weight":"100","max": "100000"}
      },

      "seccomp": {
          "default": "SCMP_ACT_ALLOW",
          "locked": false,
          "rules": [
            {"syscall": "kexec_file_load", "action": "SCMP_ACT_KILL"},
            {"syscall": "breakpoint", "action": "SCMP_ACT_KILL"}
          ]
        },

      "namespace" : {
        "opts": {
          "autocreate": true
        },
        "shares": {
          "all": "default",
          "user":"disable",
          "net": "enable"
        },
        "mounts": [
          {"target": "/home", "source": "/var/tmp/$SANDBOX", "mode": "rw"},
          {"target": "/usr",  "source": "/usr", "mode": "ro"},
          {"target": "/lib64",  "source": "/lib64", "mode": "ro"},
          {"target": "/etc/resolv.conf", "mode": "symlink"},
          {"target": "/tmp", "mode": "anonymous"},
          {"target": "/dev", "mode":"devfs"}
        ]
      },

      "commands": [
        {
          "uid": "home",
          "info" : "expand $home on server side",
          "exec": {"cmdpath": "/bin/ls", "args": ["-l", "$HOME"]}
        },
        {
          "uid": "afbroot",
          "info" : "expand afb_binder root directory",
          "exec": {"cmdpath": "/bin/echo", "args": ["$AFB_ROOTDIR"]}
        },
        {
          "uid": "mycap",
          "info" : "return sandbox capabilities",
          "privilege": "special privilege",
          "exec": {"cmdpath": "/sbin/capsh", "args": ["--print"]}
        },
        {
          "uid": "sleep",
          "info" : "sleep timeout second",
          "usage": {"timeout": "xx"},
          "exec": {"cmdpath": "/bin/sleep", "args": ["%timeout%"]},
          "sample": [
            {"action":"start", "args": {"timeout": "180"}},
            {"action":"stop", "args": {"pid": 1234, "signal":"sigterm"}},
            {"action":"stop", "args": {"signal":"sigterm"}}
          ]
        },
        {
          "uid": "timeout",
          "info" : "sleep should fail because of 3s timeout",
          "timeout": 3,
          "exec": {"cmdpath": "/bin/sleep", "args": 80}
        },
        {
          "uid": "json",
          "info" : "test json encoder take json from stdout",
          "encoder": {"output": "json", "opts": {"maxlen":1024}},
          "exec": {"cmdpath": "/bin/echo", "args": "%query%"},
          "sample": [
            {"args": {"query": "{'message':'simple'"}},
            {"args": {"query": "-- ignore prefix --- {'message':'simple'} --- ignore tail ---"}},
            {"args": {"query": "{'message':'complex'} {'test_1':1} {'test_2':0} {'complex':1, 'array':['elem1','elem2','elem3']}"}}
          ]
        },
        {
          "uid": "myid",
          "info" : "return current namespace id",
          "exec": {"cmdpath": "/usr/bin/id"}
        },
        {
          "uid": "env",
          "encoder":"line",
          "info" : "return current namespace env",
          "exec": {"cmdpath": "/usr/bin/env"}
        },
        {
          "uid": "display",
          "info": "(format text) return one event per line",
          "usage": {"filename":"xxxx"},
          "encoder":"text",
          "exec": {"cmdpath": "/bin/cat", "args":["%filename%"]},
          "sample": [
            {"args": {"filename": "/etc/passwd"}}
          ]
        },
        {
          "uid": "list",
          "info" : "custom encoder sample outputs json_array of 'blkcount' lines",
          "usage": {"dirname": "xxxxx"},
          "exec": {"cmdpath": "/bin/ls", "args": ["-l", "%dirname%"]},
          "sample": [
            {"args": {"dirname": "/etc"}},
            {"args": {"dirname": "/etc/udev"}},
            {"args": {"dirname": "/var/cache/"}}
          ]
        },
        {
          "uid": "custom",
          "info" : "custom encoder sample outputs json_array of 'blkcount' lines",
          "usage": {"dirname": "xxxxx"},
          "encoder":{"plugin": "format-demo", "output":"my-custom-encoder", "opts":{"blkcount":10, "maxlen":256}},
          "exec": {"cmdpath": "/bin/ls", "args": ["-l", "%dirname%"]},
          "sample": [
            {"args": {"dirname": "/etc"}}
          ]
        }
      ]
    }
  ]
}
